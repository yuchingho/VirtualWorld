float       TIMER_CLOSE = 5.0;      
integer     DIRECTION   = -1;       // Direction door opens in. Either 1 (outwards) or -1 (inwards);

integer     DOOR_OPEN   = 1;
integer     DOOR_CLOSE  = 2;

vector      originalPos; 
string text;

list keyList = ["32d81a3a-6b76-45f4-a034-7f706cca6163",
                "6e70038c-e745-4fdb-a047-1c9fccf0d495",
                "acc66f4d-c12a-4eca-8c0d-9891ef89c4d1",
                "ad66f2b6-cc93-48a5-9e9b-0ad14813801e",
                "d1782306-d67e-4dd1-991f-595ab6d9a647",
                "4ec6fdf0-043c-414d-b76e-451d92e9590c"];
                             
door(integer what) 
{
    rotation    rot;
    rotation    delta;
    vector eul;
    vector finalPos;
    
    llSetTimerEvent(0); 
    
    if (what == DOOR_OPEN) 
    {
        llTriggerSound("doorOpen", 1);  
        eul = <0, 0, 90*DIRECTION>; // 90 degrees around the z-axis, in Euler form 
        finalPos = <173.218,68.291,115.223>;
    } 
	else if (what == DOOR_CLOSE) 
    {
        llTriggerSound("doorClose", 1);  
        eul = <0, 0, 90*-DIRECTION>; // 90 degrees around the z-axis, in Euler form
        finalPos = <171.503,69.980,115.223>;
    }
    
    eul *= DEG_TO_RAD; // Convert to radians rotation
    rot = llGetRot();
    delta = llEuler2Rot(eul);
    rot = delta * rot;                  
    llSetPos(finalPos);
    llSetRot(rot);    
}

default 
{   
    on_rez(integer start_param) 
    { 
        llResetScript();
    }
    
    state_entry() 
    {
        originalPos = llGetPos();  
        llListen(0, "", NULL_KEY, "");   
    }
    
    touch_start(integer total_number) 
    {
        llSetTouchText("Open Door");
		integer i;
        integer keys = llGetListLength(keyList);
        string  name = llGetInventoryName(INVENTORY_OBJECT,0);
        llSetTouchText("Open Door");
        
        for (i = 0; i < keys ; i++)
		{
            if (llList2String(keyList,i) == name)
			{
                door(DOOR_OPEN);
                state open_state;
                break;
            }
        }
    }
    
    moving_end() 
    {  
        originalPos = llGetPos();
    }
}

state open_state
{
    state_entry() 
    {
        llSetTimerEvent(TIMER_CLOSE);
    }
    
    touch_start(integer num) 
    {
        door(DOOR_CLOSE);
        llSetPos(originalPos);            
        state default;
    }
    
    timer() 
    { 
        door(DOOR_CLOSE);
        llSetPos(originalPos);            
        state default;
    }
    
    moving_start() 
    { 
        door(DOOR_CLOSE);
        state default;
    }
}